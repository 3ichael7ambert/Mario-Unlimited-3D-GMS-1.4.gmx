<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBlock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_platformParent</parentName>
  <maskName>block_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    height = -32; // height of object
       z = 32;       //z base start
       z_floor = 0;

    depth = -y*10;

x_dist=(x-Mario.x);
y_dist=(y-Mario.y);
//mySpeed=0;
direction=90;
dis=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //collision detection on z plane
    if ( ( z &lt; other.z &amp;&amp; other.height+other.z &lt; z ) 
         || ( z+height &lt; other.z &amp;&amp; z &gt; other.height+other.z ) )
    { 
        x = xprevious;
        y = yprevious;
        if(instance_place(x,y,block2) == other.id)  //when hit block uderneath
        {
            z_jump = 0;
            z = other.z-height;
        }
    }
    else 
    {
        if( z &lt; other.height+other.z ) //when on top of block
        {
            if( y &lt; other.y ) depth = other.depth - (other.y - y); //for depth on top of object in z plane
            z_floor = other.height+other.z-1;
        }
    }
    
    if( z+height+2 &gt; other.z) //just below the block, space underneath
    {
        if( y &gt; other.y ) depth = other.depth + (other.y+y);
        //just do nothing, let mario pass underneath
    }
}</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_dist1=(x-Mario.x);
y_dist1=(y-Mario.y);
//if !x_dist1&gt;100 &amp;&amp; !x_dist1&lt;-100 then x_dist=x_dist1;
//if !y_dist1&gt;100 &amp;&amp; !y_dist1&lt;-100 then y_dist=y_dist1;
//if sb_p1.y&gt;self.y then {depth-=y;} else {depth=0;}
//y_dist=y_dist1;
//x_dist=x_dist1;

//obj_LvlControl.AvaSpeed=speed;

//if y&lt;-100 instance_destroy();
/*
if x_dist1&gt;200 then
{
x_dist=x_dist1*10;
}
else
x_dist=x_dist1;

if y_dist1&gt;200 then
{
y_dist=y_dist1*10;
}
else
{
y_dist=y_dist1;
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //if( z &lt; z_floor) draw_background(bshadow,x-16,y-8); //best to use tile and set to zero depth
   // draw_sprite(sprBlock,-1,x,y+z); //the block image
      // if( z &lt; z_floor) draw_background_ext(bshadow,x+x_dist,y+y_dist,1,1,0,1,.3); //best to use tile and set to zero depth
    draw_sprite_ext(sprBlock,-1,x+x_dist1*1.1, y+y_dist1*1.2, 1,1,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
